class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def print_list(self):
        temp = self.head
        while temp:
            print(temp.data, end=" ")
            temp = temp.next
        print()

    def append(self, new_data):
        new_node = Node(new_data)
        if self.head is None:
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node

    def merge_lists(self, list1, list2):
        if list1 is None:
            return list2
        if list2 is None:
            return list1
        if list1.data <= list2.data:
            list1.next = self.merge_lists(list1.next, list2)
            return list1
        else:
            list2.next = self.merge_lists(list1, list2.next)
            return list2

if __name__ == '__main__':
    list1 = LinkedList()
    list1.append(5)
    list1.append(10)
    list1.append(15)

    list2 = LinkedList()
    list2.append(2)
    list2.append(3)
    list2.append(20)

    merged_list = LinkedList()
    merged_list.head = merged_list.merge_lists(list1.head, list2.head)

    print("Merged Linked List is:")
    merged_list.print_list()
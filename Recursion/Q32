class TreeNode:
    def __init__(self, key):
        self.key = key
        self.left = None
        self.right = None

class BinaryTree:
    def __init__(self):
        self.root = None

    def print_leaf_nodes(self, node):
        if node is None:
            return

        if node.left is None and node.right is None:
            print(node.key, end=" ")
            return

        if node.left:
            self.print_leaf_nodes(node.left)
        if node.right:
            self.print_leaf_nodes(node.right)

    def print_leaf_nodes_wrapper(self):
        print("Leaf nodes of the Binary Search Tree:", end=" ")
        self.print_leaf_nodes(self.root)
        print()

if __name__ == '__main__':
    bt = BinaryTree()
    bt.root = TreeNode(8)
    bt.root.left = TreeNode(3)
    bt.root.right = TreeNode(10)
    bt.root.left.left = TreeNode(1)
    bt.root.left.right = TreeNode(6)
    bt.root.left.right.left = TreeNode(4)
    bt.root.left.right.right = TreeNode(7)
    bt.root.right.right = TreeNode(14)
    bt.root.right.right.left = TreeNode(13)

    bt.print_leaf_nodes_wrapper()